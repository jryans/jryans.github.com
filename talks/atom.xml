<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Talks on J. Ryan Stinnett</title>
    <link>https://convolv.es/talks/</link>
    <description>Recent content in Talks on J. Ryan Stinnett</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 15 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://convolv.es/talks/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Testing debug info of optimised programs</title>
      <link>https://convolv.es/talks/testing-debug-info/</link>
      <pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://convolv.es/talks/testing-debug-info/</guid>
      <description>In this preliminary work, we symbolically execute unoptimised and optimised versions of a program which are then checked for debug info consistency. We expect this to allow testing correctness of debug info generation across a much larger portion of the compiler.</description>
      <content:encoded><![CDATA[<p>Workshop talk (<a href="https://www.youtube.com/watch?v=SIYPYP06fY0">video</a>,
<a href="/talks/2022/KLEE/Testing%20debug%20info%20of%20optimised%20programs.pdf">slides</a>)
presented at <a href="https://srg.doc.ic.ac.uk/klee22/schedule.html">KLEE 2022</a></p>
<p><a href="https://www.youtube.com/watch?v=SIYPYP06fY0"><img loading="lazy" src="video.png" alt=""  />
</a></p>
<h2 id="abstract">Abstract</h2>
<p>Debuggers rely on compiler-produced metadata to present correct variable values
and line numbers in the source language. While this tends to work for
unoptimised programs, current compilers either throw away or corrupt debugging
info in optimised programs. Current approaches for testing debug info rely on
manual test cases or only reach a small portion of the compiler. In this
preliminary work, we symbolically execute unoptimised and optimised versions of
a program which are then checked for debug info consistency. We expect this to
allow testing correctness of debug info generation across a much larger portion
of the compiler.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Room to grow: Building collaborative, open software</title>
      <link>https://convolv.es/talks/room-to-grow/</link>
      <pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://convolv.es/talks/room-to-grow/</guid>
      <description>We examine one approach to collaborative, open software by building on Matrix, a secure, decentralised, real-time communication protocol with generic database capabilities hiding beneath its current focus on chat.</description>
      <content:encoded><![CDATA[<p><a href="https://www.hytradboi.com/2022/room-to-grow-building-collaborative-open-software">Conference talk</a> presented at <a href="https://www.hytradboi.com/">HYTRADBOI 2022</a></p>
<p><a href="https://www.hytradboi.com/2022/room-to-grow-building-collaborative-open-software"><img loading="lazy" src="video.png" alt=""  />
</a></p>
<h2 id="abstract">Abstract</h2>
<p><a href="https://www.inkandswitch.com/local-first/">Local-first software</a> for creative
work resets the balance of ownership away from the cloud, allowing creators to
retain control of their work while still collaborating in real time with others.
This sounds like a magical ideal, but it also raises many new questions, such
as:</p>
<ul>
<li>How should data synchronisation work?</li>
<li>What does user identity look like when collaborating?</li>
<li>How is document access defined among several people?</li>
<li>Is some kind of complex custom backend needed to handle all this?</li>
</ul>
<p>In this talk, we examine one approach to collaborative, open software by
building on <a href="https://matrix.org/">Matrix</a>, a secure, decentralised, real-time
communication protocol with generic database capabilities hiding beneath its
current focus on chat. We show through several examples and demos that Matrix
can assist with all of the questions above, allowing creative software to focus
on delivering the best experience while still meeting local-first ideals.</p>
<p>The software itself can also be collaborative and
<a href="https://malleable.systems/">malleable</a>, allowing for user customisation without
depending on upstream vendors to add a new options to achieve your goals.</p>
<h2 id="notes">Notes</h2>
<p>The following notes describe the ideas from the talk in more detail:</p>
<ul>
<li><a href="https://github.com/matrix-org/collaborative-documents/blob/main/docs/collaborative-documents.md">Matrix-native collaborative documents</a></li>
<li><a href="https://github.com/matrix-org/collaborative-documents/blob/main/docs/saguaro.md">Saguaro: prickly collaboration</a></li>
</ul>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
